@page "/login"
@using Hotel_Frontend.Models
@using Hotel_Frontend.Services
@using HttpClientImpl
@using Newtonsoft.Json
@inject IHttpClientImpl HttpClientImpl
@inject NavigationManager NavManager
@inject IAuthenticationService AuthenticationService

<div class="card m-2">
    <h3 class="card-header">Login</h3>
    <div class="card-body">
        <EditForm EditContext="@_editContext" OnValidSubmit="Callback" @onreset="HandleReset">
            <div class="alert">
                <label>@_errorMessage</label>
            </div>
            <div class="form-row">
                <label>Username</label>
                <InputText @bind-Value="_customerModel.UserName" class="form-control"/>
            </div>
            <div class="form-row">
                <label>Password</label>
                <InputText @bind-Value="_customerModel.Password" type="password" class="form-control"/>
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary mr-1">Submit</button>
            </div>
        </EditForm>
        <div class="top-row px-4">
            <a href="/register" class="ml-md-auto">Register</a>
        </div>
    </div>
</div>

@code {
    private EditContext _editContext;
    private LoginModel _customerModel = new LoginModel();
    private const string FixedUri = "http://localhost:5000";
    private string _errorMessage;

    protected override async void OnInitialized()
    {
        if (AuthenticationService.User != null)
        {
            NavManager.NavigateTo("/mysite");
            StateHasChanged();
        }
        _editContext = new EditContext(_customerModel);
        _errorMessage = null;
    }

    private async void Callback()
    {
        try
        {
            await AuthenticationService.Login(_customerModel);
            NavManager.NavigateTo("/mysite");
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
            StateHasChanged(); //Re-render.
        }
    }

    private void HandleReset()
    {
        _customerModel = new LoginModel();
        _editContext = new EditContext(_customerModel);
    }

}
