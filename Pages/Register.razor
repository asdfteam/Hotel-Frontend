@page "/register"
@using Hotel_Frontend.Models
@using Hotel_Frontend.Services
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavManager
@inject IReservationService ReservationService
@inject AppState AppState

<div class="card m-3">
    <h3 class="card-header">Register</h3>
    <div class="card-body">
        <EditForm EditContext="@_editContext" OnValidSubmit="Callback">
            <DataAnnotationsValidator />
            <div class="alert">
                <label>@_errorMessage</label>
            </div>
            <div class="form-group">
                <div class="form-row">
                    <label>Name</label>
                    <InputText @bind-Value="_customer.CustomerName" class="form-control" />
                    <ValidationMessage For="@(() => _customer.CustomerName)"></ValidationMessage>
                </div>
                <div class="form-row">
                    <label>Username</label>
                    <InputText @bind-Value="_customer.Username" class="form-control" />
                    <ValidationMessage For="@(() => _customer.Username)" />
                </div>
                <div class="form-row">
                    <label>Password</label>
                    <InputText @bind-Value="_customer.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => _customer.Password)" />
                </div>
                <div class="form-row">
                    <label>Repeat password</label>
                    <InputText type="password" @bind-Value="_customer.RepeatPassword" class="form-control" />
                    <ValidationMessage For="@(() => _customer.RepeatPassword)" />
                </div>
                @if (_loading)
                {
                    <div class="spinner-border spinner-border-sm"></div>
                }
                <div class="text-center">
                    <button type="submit" class="btn btn-primary mr-1">Submit</button>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private Model _customer;
    private EditContext _editContext;
    private string _errorMessage;
    private bool _loading;

    protected override void OnInitialized()
    {
        if (AuthenticationService.User != null)
        {
            NavManager.NavigateTo("/mysite");
        }
        _customer = new Model();
        _editContext = new EditContext(_customer);
        _errorMessage = null;
    }

    private async void Callback()
    {
        try
        {
            _loading = true;
            var result = await AuthenticationService.RegisterModel(_customer);
            if (result == null) throw new Exception("Registering failed, please ask for help.");
            await AuthenticationService.Login(result);
            AppState.Toggle();
            NavManager.NavigateTo(ReservationService.Reservation != null ? "/confirmation" : "/mysite");
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
            StateHasChanged();
        }
        finally
        {
            _loading = false;
            StateHasChanged();
        }
    }
}
