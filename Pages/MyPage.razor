@page "/mysite"
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavManager
@inject IReservationService ReservationService
@using HotelLibrary
@using Hotel_Frontend.Services
<h2>My page</h2>

<div class="card">
    @if (_loading)
    {
    <div class="spinner-border spinner-border-sm"></div>
    }
    @if (_reservations != null && _reservations.Count != 0)
    {
        <ul>
            @foreach (var res in _reservations)
            {
                <li>
                    <div class="card">
                        <div class="card-body">
                            <b>Room number:</b> @res.Room.RoomNumber<br />
                            <b>Check-in:</b> @res.StartDate.Date<br />
                            <b>Check-out:</b> @res.EndDate.Date<br />
                            <b>Amount of single beds:</b> @res.Room.SingleBed<br />
                            <b>Amount of double beds:</b> @res.Room.DoubleBed<br />
                            @if (valiDate(res))
                            {
                                @if (res.Room.RoomStatus != "SERVICE")
                                {
                                    <button @onclick="RenderOrderCard" value="@res.Room.RoomNumber">Order service</button>
                                    @if (_renderOrder)
                                    {
                                        <CascadingValue Value="@res" Name="Reservation">
                                            <OrderService OnOrderCompletion="OrderCompletion"/>
                                        </CascadingValue>
                                    }
                                }
                                else
                                {
                                    <p><b>Room service is ordered and will be delivered soon :)</b></p>
                                }
                            }
                        </div>
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p><b>You currently have no reservations available, do you want to book a room?</b></p>
        <NewReservation/>
    }
</div>

@code {

    bool _loading = false;
    bool _renderOrder = false;
    List<Reservation> _reservations = new List<Reservation>();

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationService.User != null)
        {
            _loading = true;
            _reservations = await ReservationService.GetReservation(AuthenticationService.User.CustomerId);
            _reservations.Sort((r1, r2) => DateTime.Compare(r1.StartDate, r2.StartDate));
            _loading = false;
        }
        else
        {
            NavManager.NavigateTo("/login");
        }
    }

    private void OrderCompletion(bool completedOrder)
    {
        if (completedOrder)
        {
            RenderOrderCard();
        }
    }

    private bool valiDate(Reservation res)
    {
        var r1 = DateTime.Compare(res.StartDate, DateTime.Now);
        var r2 = DateTime.Compare(DateTime.Now, res.EndDate);

        return r1 < 0 && r2 <= 0;
    }


    private void RenderOrderCard()
    {
        _renderOrder = !_renderOrder;
        StateHasChanged();
    }

}
